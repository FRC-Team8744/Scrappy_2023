// RobotBuilder Version: 5.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

// ROBOTBUILDER TYPE: Command.

package frc.robot.commands;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;
import edu.wpi.first.wpilibj.util.Color;
import edu.wpi.first.wpilibj2.command.CommandBase;
import frc.robot.subsystems.LEDLights;

import java.util.function.DoubleSupplier;


// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS

/**
 *
 */
public class ChangeLED extends CommandBase {
    private final LEDLights m_LEDLights;
    private int ColorCount;

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS
 
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS
    private int m_color_r, m_color_g, m_color_b;
    // LEDLights subsystem, int r, int g, int b
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS

    public ChangeLED(LEDLights subsystem, int r, int g, int b) {

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    m_LEDLights = subsystem;
    addRequirements(m_LEDLights);
    m_color_r = r;
    m_color_g = g;
    m_color_b = b;

        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES

        // m_subsystem = subsystem;
        // addRequirements(m_subsystem);    

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    
    }

    // Called when the command is initially scheduled.
    @Override
    public void initialize() {
        // SmartDashboard.putNumber("Debug string", "ChangeLED");
        // ColorCount = 0;
        // SmartDashboard.putNumber("ColorCount", ColorCount);
    }
    // Called every time the scheduler runs while the command is scheduled.
    @Override
    public void execute() {
    
    }

    // Called once the command ends or is interrupted.
    @Override
    public void end(boolean interrupted) {
    
        // ColorCount = ColorCount + 1;
        // if (ColorCount == 3) {
        //     m_LEDLights.setcolor( 0, 0, 0 );
        //     ColorCount = 0;
        // } else if (ColorCount == 2) {
        //     m_LEDLights.setcolor(0, 0, 255);  
        // } else if (ColorCount == 1) {
        //     m_LEDLights.setcolor(0, 255, 0 );
        // }
        m_LEDLights.setcolor(m_color_r, m_color_g, m_color_b);
    // SmartDashboard.putNumber("ColorCount", ColorCount);
    }

    // Returns true when the command should end.
    @Override
    public boolean isFinished() {
        return true;
    }

    @Override
    public boolean runsWhenDisabled() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DISABLED
        return false;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DISABLED
    }
}
